{"version":3,"sources":["components/FormContacts/FormContacts.module.css","components/ListContacts/ListContacts.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/FormContacts/FormContacts.js","components/ListContacts/ListContacts.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","FormContacts","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","Form","Label","Input","type","pattern","title","required","onChange","placeholder","Button","Component","ListContactsItem","id","onDelete","Item","Text","Span","onClick","ListContacts","contacts","length","List","map","contact","key","Filter","App","filter","handleAddContact","uuidv4","find","toLowerCase","alert","trim","test","handleDeleteContact","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1eb8f9a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormContacts_Form__3yAy2\",\"Label\":\"FormContacts_Label__aMA5D\",\"Input\":\"FormContacts_Input__2Tm4g\",\"Button\":\"FormContacts_Button__H4bs7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ListContacts_List__1peec\",\"Item\":\"ListContacts_Item__bZ_3k\",\"Text\":\"ListContacts_Text__2C_Cv\",\"Span\":\"ListContacts_Span__nc7J-\",\"Button\":\"ListContacts_Button__2Zb7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__kdAuA\",\"Input\":\"Filter_Input__2c7JC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1_zV7\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={styles.Container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FormContacts.module.css';\r\n\r\nclass FormContacts extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => this.setState({ name: '', number: '' });\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.Label}>\r\n          Name\r\n          <input\r\n            className={styles.Input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Ivan Ivanov\"\r\n          />\r\n        </label>\r\n        <label className={styles.Label}>\r\n          Number\r\n          <input\r\n            className={styles.Input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={number}\r\n            placeholder=\"+38 (011) 123-45-\"\r\n          />\r\n        </label>\r\n        <button className={styles.Button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormContacts.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FormContacts;","import PropTypes from 'prop-types';\r\nimport styles from './ListContacts.module.css';\r\n\r\nconst ListContactsItem = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <li className={styles.Item}>\r\n      <p className={styles.Text}>\r\n        {name}: <span className={styles.Span}>{number}</span>\r\n      </p>\r\n      <button\r\n        className={styles.Button}\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}\r\n        title=\"Удалить\"\r\n      >Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ListContacts = ({ contacts, onDelete }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul className={styles.List}>\r\n      {contacts.map(contact => (\r\n        <ListContactsItem {...contact} onDelete={onDelete} key={contact.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListContacts;","import PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.Label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        className={styles.Input}\r\n        value={value}\r\n        onChange={onChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/FormContacts';\nimport ContactList from './components/ListContacts';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      alert(`${number} is already in contacts.`);\n    } else if (name.trim() === '' || number.trim() === '') {\n      alert(\"Enter the contact's name and number phone!\");\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\n      alert('Enter the correct number phone!');\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, contact],\n      }));\n    }\n  };\n\n  handleDeleteContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handleAddContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDelete={this.handleDeleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}